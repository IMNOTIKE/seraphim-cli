{
	// Place your seraphim-cli workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"New Bubble Tea Program": {
		"prefix": "bubbletea",
		"body": [
			"",
			"import (",
			"\t\"fmt\"",
			"\t\"os\"",
			"",
			"\ttea \"github.com/charmbracelet/bubbletea\"",
			")",
			"",
			"func $1() {",
			"\t_, err  := tea.NewProgram(initialModel(), tea.WithAltScreen()).Run()",
			"\tif err != nil {",
			"\t\tfmt.Fprintln(os.Stderr, err)",
			"\t\tos.Exit(1)",
			"\t}",
			"}",
			"",
			"type model struct{}",
			"",
			"func (m model) Init() tea.Cmd {",
			"\treturn nil",
			"}",
			"",
			"func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {",
			"\tswitch msg := msg.(type) {",
			"\tcase tea.KeyMsg:",
			"\t\tswitch msg.String() {",
			"\t\tcase \"ctrl+c\":",
			"\t\t\treturn m, tea.Quit",
			"\t\t}",
			"\t}",
			"\treturn m, nil",
			"}",
			"",
			"func (m model) View() string {",
			"\treturn \"Press Ctrl+C to exit\"",
			"}"
		]
	}
}